buildscript {
    ext.corda_release_version = '0.14.0'
    ext.corda_gradle_plugins_version = '0.14.0'
    ext.junit_version = '4.12'
    ext.quasar_version = '0.7.6'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        flatDir { dirs 'lib/dependencies' }
    }

    dependencies {
        classpath fileTree(dir: 'lib/dependencies' , include: '*.jar')
        classpath "net.corda.plugins:cordformation:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:quasar-utils:$corda_gradle_plugins_version"
    }
}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven { url 'https://dl.bintray.com/kotlin/exposed' }
    maven { url 'https://jitpack.io' }
    flatDir { dirs 'lib/dependencies' }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

sourceSets {
    main {
        resources {
            srcDir "config/dev"
        }
    }
    test {
        resources {
            srcDir "config/test"
        }
    }
}

dependencies {
    // Do not add your own cordapp dependencies to this folder - they will not be included in the cordapp JAR
    cordaCompile fileTree(dir: 'lib/dependencies' , include: '*.jar')

    testCompile "junit:junit:$junit_version"

    // Corda integration dependencies
    cordaCompile "net.corda:corda-core:$corda_release_version"
    cordaCompile "net.corda:corda-finance:$corda_release_version"
    cordaCompile "net.corda:corda-jackson:$corda_release_version"
    cordaCompile "net.corda:corda-rpc:$corda_release_version"
    cordaCompile "net.corda:corda-webserver-impl:$corda_release_version"
    cordaRuntime "net.corda:corda:$corda_release_version"
    cordaRuntime "net.corda:corda-webserver:$corda_release_version"

    testCompile "net.corda:corda-test-utils:$corda_release_version"

    // CorDapp dependencies
    // Specify your cordapp's dependencies below, including dependent cordapps
}

task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['jar']) {
    directory "./build/nodes"
    networkMap "CN=Controller,O=R3,OU=corda,L=London,C=UK"
    node {
        name "CN=Controller,O=R3,OU=corda,L=London,C=UK"
        advertisedServices = ["corda.notary.validating"]
        p2pPort 10002
        rpcPort 10003
        cordapps = []
    }
    node {
        name "CN=NodeA,O=NodeA,L=London,C=UK"
        advertisedServices = []
        p2pPort 10005
        rpcPort 10006
        webPort 10007
        cordapps = []
        rpcUsers = [[ user: "user1", "password": "test", "permissions": []]]
    }
    node {
        name "CN=NodeB,O=NodeB,L=New York,C=US"
        advertisedServices = []
        p2pPort 10008
        rpcPort 10009
        webPort 10010
        cordapps = []
        rpcUsers = [[ user: "user1", "password": "test", "permissions": []]]
    }
}

task runTemplateClient(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.template.client.TemplateClient'
    args 'localhost:10006'
}

/**
 * This builds the distribution package for the offline template and can only be run when online
 */
task gatherDependencies(type: Copy) {
    into "lib/dependencies"
    from buildscript.configurations.classpath
    from configurations.runtime
    from configurations.testRuntime
    from configurations.quasar
}
